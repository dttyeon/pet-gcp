#!/bin/bash

set -e

sleep 30

apt-get update -y
apt-get install -y docker.io git

systemctl enable docker
systemctl start docker

# Docker Daemon Ï§ÄÎπÑ ÎåÄÍ∏∞
for i in {1..60}; do
  if docker info > /dev/null 2>&1; then
    echo "‚úÖ Docker Daemon is ready."
    break
  else
    echo "‚è≥ Waiting for Docker Daemon... ($i/60)"
    sleep 2
  fi
done

mkdir -p /opt/petclinic
cd /opt/petclinic

git clone https://github.com/SteveKimbespin/petclinic_btc.git
cd petclinic_btc

echo "üëâ pom.xml ÏàòÏ†ï Ï§ë..."
sed -i "s|\[Change Me\]|${DB_IP}|g" pom.xml

cat <<EOL > src/main/resources/application.properties
# ===== Server Port =====
server.port=8080

# ===== Database Connection =====
spring.datasource.url=jdbc:mysql://${DB_IP}:3306/petclinic?useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=petclinic
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ===== Hibernate (JPA) =====
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# ===== Connection Pool (HikariCP) =====
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-init-sql=SET NAMES utf8mb4
spring.datasource.hikari.connection-test-query=SELECT 1

# ===== Logging =====
logging.level.org.springframework=INFO
EOL

cat <<EOL > Dockerfile
# 1Îã®Í≥Ñ: Maven + JDKÎ°ú ÎπåÎìú
FROM maven:3.8.1-openjdk-8 AS builder
WORKDIR /app
COPY . .

RUN mvn clean install -P MySQL -DskipTests

# 2Îã®Í≥Ñ: TomcatÏóê war Î≥µÏÇ¨Ìï¥ÏÑú Ïã§Ìñâ
FROM tomcat:9.0-jdk8
RUN rm -rf /usr/local/tomcat/webapps/*
COPY --from=builder /app/target/petclinic.war /usr/local/tomcat/webapps/ROOT.war
EOL

docker stop petclinic 2>/dev/null || true
docker rm petclinic 2>/dev/null || true

docker build -t petclinic-app .
docker run -d --network host --name petclinic -p 8080:8080 petclinic-app

sleep 1000

docker stop petclinic 2>/dev/null || true
docker rm petclinic 2>/dev/null || true

docker run -d --network host --name petclinic -p 8080:8080 petclinic-app
